version: '3.8'

services:
  app:
    build: .
    container_name: hbi_app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
      # Add other environment variables like API keys here
    depends_on:
      - text_index
      - object_store
      - graph_db
      - loki
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  text_index:
    image: nouchka/sqlite3:latest
    container_name: hbi_sqlite
    stdin_open: true
    tty: true
    volumes:
      - ./data/database:/db
    
  object_store:
    image: minio/minio:latest
    container_name: hbi_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data/minio:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"

  # --- Observability Stack ---
  prometheus:
    image: prom/prometheus:latest
    container_name: hbi_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus-rules.yml:/etc/prometheus/prometheus-rules.yml
    command: '--config.file=/etc/prometheus/prometheus.yml'

  alertmanager:
    image: prom/alertmanager:latest
    container_name: hbi_alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command: '--config.file=/etc/alertmanager/alertmanager.yml'

  loki:
    image: grafana/loki:latest
    container_name: hbi_loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana-oss:latest
    container_name: hbi_grafana
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./config/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
      - loki

  langfuse:
    image: langfuse/langfuse:latest
    container_name: hbi_langfuse
    ports:
      - "3001:3000" # Expose Langfuse on a different port
    environment:
      - DATABASE_URL=postgresql://langfuse:langfuse@langfuse-db:5432/langfuse
      - NEXTAUTH_SECRET=mysecret
      - SALT=mysecret
      - NEXTAUTH_URL=http://localhost:3001
    depends_on:
      - langfuse-db

  langfuse-db:
    image: postgres:15
    container_name: hbi_langfuse_db
    restart: always
    environment:
      - POSTGRES_USER=langfuse
      - POSTGRES_PASSWORD=langfuse
      - POSTGRES_DB=langfuse
    volumes:
      - ./data/langfuse-db:/var/lib/postgresql/data

  graph_db:
    image: neo4j:latest
    container_name: hbi_neo4j
    ports:
      - "7474:7474"  # Neo4j Browser UI
      - "7687:7687"  # Bolt protocol
    volumes:
      - ./data/neo4j:/data
      - ./data/neo4j/logs:/logs
      - ./data/neo4j/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
      - NEO4J_PLUGINS=["graph-data-science","apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*,apoc.*

  redis:
    image: redis:7-alpine
    container_name: hbi_redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes

  worker:
    build: .
    container_name: hbi_worker
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - text_index
      - object_store
      - graph_db
    command: arq src.core.worker.WorkerSettings

  portal:
    build: ./portal
    container_name: hbi_portal
    ports:
      - "3002:3002"
    depends_on:
      - app

  ollama:
    image: ollama/ollama:latest
    container_name: hbi_ollama
    ports:
      - "11434:11434"
    volumes:
      - ./data/ollama:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    command: serve

volumes:
  langfuse-db: